// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of the private endpoint.
    /// </summary>
    public partial class PrivateEndpointProperties
    {
        /// <summary>
        /// Initializes a new instance of the PrivateEndpointProperties class.
        /// </summary>
        public PrivateEndpointProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateEndpointProperties class.
        /// </summary>
        /// <param name="subnet">The ID of the subnet from which the private IP
        /// will be allocated.</param>
        /// <param name="networkInterfaces">Gets an array of references to the
        /// network interfaces created for this private endpoint.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// private endpoint. Possible values are: 'Updating', 'Deleting', and
        /// 'Failed'.</param>
        /// <param name="privateLinkServiceConnections">A grouping of
        /// information about the connection to the remote resource.</param>
        /// <param name="manualPrivateLinkServiceConnections">A grouping of
        /// information about the connection to the remote resource. Used when
        /// the network admin does not have access to approve connections to
        /// the remote resource.</param>
        public PrivateEndpointProperties(Subnet subnet = default(Subnet), IList<NetworkInterface> networkInterfaces = default(IList<NetworkInterface>), string provisioningState = default(string), IList<PrivateLinkServiceConnection> privateLinkServiceConnections = default(IList<PrivateLinkServiceConnection>), IList<PrivateLinkServiceConnection> manualPrivateLinkServiceConnections = default(IList<PrivateLinkServiceConnection>))
        {
            Subnet = subnet;
            NetworkInterfaces = networkInterfaces;
            ProvisioningState = provisioningState;
            PrivateLinkServiceConnections = privateLinkServiceConnections;
            ManualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the subnet from which the private IP will be
        /// allocated.
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public Subnet Subnet { get; set; }

        /// <summary>
        /// Gets an array of references to the network interfaces created for
        /// this private endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "networkInterfaces")]
        public IList<NetworkInterface> NetworkInterfaces { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the private endpoint. Possible
        /// values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets a grouping of information about the connection to the
        /// remote resource.
        /// </summary>
        [JsonProperty(PropertyName = "privateLinkServiceConnections")]
        public IList<PrivateLinkServiceConnection> PrivateLinkServiceConnections { get; set; }

        /// <summary>
        /// Gets or sets a grouping of information about the connection to the
        /// remote resource. Used when the network admin does not have access
        /// to approve connections to the remote resource.
        /// </summary>
        [JsonProperty(PropertyName = "manualPrivateLinkServiceConnections")]
        public IList<PrivateLinkServiceConnection> ManualPrivateLinkServiceConnections { get; set; }

    }
}
